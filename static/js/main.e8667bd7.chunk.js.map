{"version":3,"sources":["componentes/NavBar.js","componentes/Pag2/Search.js","componentes/Pag2/ChartPais.js","componentes/Pag2/Informacion.js","componentes/PagCountry.js","componentes/Pag1/WorldMap.js","componentes/Pag1/InfectedDeath.js","componentes/Pag1/Lista.js","componentes/Pag1/Chart.js","componentes/PagWorld.js","componentes/Layout.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","to","type","data-toggle","data-target","id","Search","getQuery","useState","text","setText","placeholder","value","onChange","e","q","target","onKeyPress","charCode","keyPress","autoFocus","onClick","handleChange","ChartPais","query","CasesHistorico","setCasesHistorico","DeathHistorico","setDeathHistorico","options2","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","numeral","format","scales","xAxes","time","tooltipFormat","yAxes","gridLines","buildChartData","data","cases","lastDataPoint","chartData","date","console","log","newDataPoint","x","y","push","useEffect","a","axios","result","timeline","caseData","deathData","fetchItems","length","datasets","backgroundColor","borderColor","options","Informacion","status","country","src","countryInfo","flag","alt","todayCases","active","critical","deaths","todayDeaths","recovered","todayRecovered","tests","Pag2","setQuery","info","setInfo","setStatus","datos","useParams","WorldMap","setTooltipContent","countries","history","useHistory","colorScale","scaleLinear","domain","range","data-tip","projectionConfig","scale","geography","geographies","map","geo","d","iso","i","iso2","color","properties","ISO_A2","fill","onMouseEnter","NAME","paises","onMouseLeave","style","hover","outline","pressed","rsmKey","memo","InfectedDeath","item","cant","Listas","tipo","Chart","options1","ticks","callback","index","values","fetch","then","response","json","fetchData","href","Lista","iso3","Pag1","content","setContent","items","setItems","left","setLeft","izq","Layout","props","children","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8667bd7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NavBar = () => {\r\n\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n                <Link className=\"navbar-brand\" to=\"/\">Coronavirus Tracker</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse justify-content-end\" id=\"collapsibleNavbar\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/world\">WorldWide</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/country/search\">Country</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n            </>\r\n    );\r\n}\r\nexport default NavBar;","import React, {useState} from 'react';\r\n\r\nconst Search=({ getQuery })=>{\r\n    const [text, setText] = useState('');\r\n\r\n    const onChange = (q) =>{\r\n        setText(q);\r\n       \r\n    }\r\n\r\n    const handleChange=(text)=>{\r\n        getQuery(text);\r\n        setText('');\r\n    }\r\n\r\n    const keyPress=(q, text)=>{\r\n        if(q.charCode === 13){\r\n            getQuery(text);\r\n            setText('');\r\n        }\r\n    }\r\n    return(\r\n        <div className='input-group mb-3 search'>\r\n        \r\n                <input type='text' className='form-control  input' placeholder='Buscar' \r\n                value= {text}\r\n                onChange={(e)=>onChange(e.target.value)}\r\n                onKeyPress={(e)=>keyPress(e, text)} autoFocus></input>\r\n                <div className=\"input-group-append\">\r\n                <button className=\"btn btn-success\" onClick={()=>handleChange(text)}>Buscar</button>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Search;\r\n","//https://disease.sh/v3/covid-19/historical/chile?lastdays=120\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport numeral from 'numeral';\r\nimport { Line } from 'react-chartjs-2';\r\nimport axios from 'axios';\r\n\r\nconst ChartPais = ({ query }) => {\r\n  const [CasesHistorico, setCasesHistorico] = useState({});\r\n  const [DeathHistorico, setDeathHistorico] = useState({});\r\n\r\n  const options1 = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n      mode: \"index\",\r\n      intersect: false,\r\n      callbacks: {\r\n        label: function (tooltipItem, data) {\r\n          return numeral(tooltipItem.value).format(\"+0,0\");\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          type: \"time\",\r\n          time: {\r\n            format: \"MM/DD/YY\",\r\n            tooltipFormat: \"ll\",\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  const options2 = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n      },\r\n    },\r\n    maintainAspectRatio: true,\r\n    tooltips: {\r\n      mode: \"index\",\r\n      intersect: false,\r\n      callbacks: {\r\n        label: function (tooltipItem, DeathHistorico) {\r\n          return numeral(tooltipItem.value).format(\"+0,0\");\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          type: \"time\",\r\n          time: {\r\n            format: \"MM/DD/YY\",\r\n            tooltipFormat: \"ll\",\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n\r\n  const buildChartData = (data, cases) => {\r\n    const chartData = [];\r\n    console.log(\"buildChart\" + data.cases)\r\n    let lastDataPoint;\r\n    for (let date in data.cases) {\r\n      if (lastDataPoint) {\r\n        let newDataPoint = {\r\n          x: date,\r\n          y: data[cases][date] - lastDataPoint\r\n        }\r\n        chartData.push(newDataPoint);\r\n      }\r\n\r\n      lastDataPoint = data[cases][date];\r\n    }\r\n    return chartData;\r\n\r\n  }\r\n  /*JSON.stringify() */\r\n  useEffect(() => {\r\n    const fetchItems = async () => {\r\n      console.log(\"query: \" + query);\r\n      try {\r\n        const result = await axios(\r\n          `https://disease.sh/v3/covid-19/historical/${query}?lastdays=120`\r\n        )\r\n\r\n        console.log(result.data.timeline);\r\n        const data = result.data.timeline;\r\n        console.log(data);\r\n        const caseData = buildChartData(data, 'cases');\r\n        setCasesHistorico(caseData);\r\n        const deathData = buildChartData(data, 'deaths');\r\n        setDeathHistorico(deathData);\r\n\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    fetchItems();\r\n  }, [query]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-sm-6 data\">\r\n        <div className=\"\">\r\n          <h3 className=\"ChartTitle\">Casos</h3>\r\n          <div>\r\n            {CasesHistorico?.length > 0 && (\r\n              <Line\r\n                data={{\r\n                  datasets: [\r\n                    {\r\n                      backgroundColor: \"rgb(153, 204, 255,1)\",\r\n                      borderColor: \"rgb(0, 153, 255,1)\",\r\n                      data: CasesHistorico,\r\n                    },\r\n                  ],\r\n                }}\r\n                options={options2}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-sm-6 data\">\r\n        <div className=\"\">\r\n          <h3 className=\"ChartTitle\">Muertes</h3>\r\n          <div>\r\n            {DeathHistorico?.length > 0 && (\r\n              <Line\r\n                data={{\r\n                  datasets: [\r\n                    {\r\n                      backgroundColor: \"#ffcccc\",\r\n                      borderColor: \"#ff4d4d\",\r\n                      data: DeathHistorico,\r\n                    },\r\n                  ],\r\n                }}\r\n                options={options2}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChartPais;","import React, { useEffect } from 'react';\r\nimport ChartPais from './ChartPais';\r\n\r\nconst Informacion = ({ data, status }) => {\r\n\r\n    useEffect(()=>{\r\n        console.log(\"data: \" + data)\r\n    },[])\r\n\r\n    if (status == 200) {\r\n        return (\r\n            <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\" id=\"pais\">\r\n                    <div className=\"col-xl-12 data\">\r\n                        <h2 className=\"paisLabel\">País: {data.country}</h2>\r\n                        <img className=\"imagen\" src={data.countryInfo.flag} alt={data.country}></img>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" id=\"casos\">\r\n                    <div className=\"col-xl-4 data\">\r\n                        <div className=\"card\" id=\"A\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Casos Confirmados</h4>\r\n                                <p className=\"card-text\">{data.cases}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 data\">\r\n                        <div className=\"card\" id=\"A\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Confirmados hoy</h4>\r\n                                <p className=\"card-text\">{data.todayCases}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 data\">\r\n                        <div className=\"card\" id=\"A\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Casos Activos</h4>\r\n                                <p className=\"card-text\">{data.active}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" id=\"muertes\">\r\n                    <div className=\"col-xl-4 data\">\r\n                        <div className=\"card\" id=\"C\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Pacientes Criticos</h4>\r\n                                <p className=\"card-text\">{data.critical}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 data\">\r\n                        <div className=\"card\" id=\"C\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Muertes Confirmadas</h4>\r\n                                <p className=\"card-text\">{data.deaths}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 data\">\r\n                        <div className=\"card\" id=\"C\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Muertes hoy</h4>\r\n                                <p className=\"card-text\">{data.todayDeaths}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\" id=\"recover\">\r\n                    <div className=\"col-xl-4 data\">\r\n                        <div className=\"card\" id=\"E\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Recuperados</h4>\r\n                                <p className=\"card-text\">{data.recovered}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 data\">\r\n                        <div className=\"card\" id=\"E\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Recuperados hoy</h4>\r\n                                <p className=\"card-text\">{data.todayRecovered}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-4 data\">\r\n                        <div className=\"card\" id=\"E\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">Test realizados</h4>\r\n                                <p className=\"card-text\">{data.tests}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <h2 className=\"chart2 paisLabel\">Datos de los ultimos 4 meses</h2>\r\n                <div className=\"ChartContenedor\">\r\n            <ChartPais query={data.country} />\r\n            </div>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n    else if (status == 404) {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-xl-12 img\">\r\n                        <img src=\"https://www.initcoms.com/wp-content/uploads/2020/07/404-error-not-found-1.png\" className=\"vector\"></img>\r\n                        <h2 className=\"error\">No se poseen datos del país solicitado</h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"container-fluid inicio\">\r\n                <br></br>\r\n                <div className=\"row \">\r\n                    <div className=\"col-xl-12 \">\r\n                        <h2 className=\"error\">Busque un país por su nombre</h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Informacion;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport Search from './Pag2/Search';\r\nimport Informacion from './Pag2/Informacion'\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Pag2 = () => {\r\n\r\n    const [query, setQuery] = useState('');\r\n    const [info, setInfo] = useState({});\r\n    const [status, setStatus] = useState(500);\r\n    const {datos} = useParams();\r\n    \r\n\r\n    const fetchItems = async () => {\r\n        console.log(\"query: \" + query);\r\n        try {\r\n            \r\n            if (query == '') {\r\n                setStatus(500);\r\n            }\r\n            else {\r\n            const result = await axios(\r\n                `https://disease.sh/v3/covid-19/countries/${query}`\r\n            )\r\n\r\n            console.log(\"result: \"+result.data);\r\n            console.log(\"status: \" + result.status);\r\n            setInfo(result.data);\r\n             \r\n                setStatus(result.status)\r\n            };\r\n        } catch (err) {\r\n            console.log(err);\r\n            setStatus(404);\r\n        }\r\n        console.log('sttatus post query ' + status)\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(datos);\r\n        if (datos != \"search\") {\r\n            setQuery(datos);\r\n            \r\n            fetchItems();\r\n        }\r\n        else {\r\n            if(query!=''){\r\n                fetchItems();\r\n            }\r\n            else{\r\n                setStatus(500);\r\n            }\r\n        }\r\n    }, [query]);\r\n\r\n    return (\r\n        <div >\r\n            <div>\r\n                <Search getQuery={(q) => setQuery(q)} />\r\n\r\n                <Informacion data={info} status={status} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pag2;","import React, { memo } from \"react\";\r\nimport numeral from 'numeral';\r\nimport { scaleLinear } from 'd3-scale';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  ZoomableGroup,\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Sphere,\r\n  Marker\r\n} from \"react-simple-maps\";\r\nimport axios from 'axios';\r\nimport Pag2 from \"../PagCountry\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nconst WorldMap = ({ setTooltipContent, countries }) => {\r\n  let history = useHistory();\r\n\r\n  const colorScale = scaleLinear()\r\n    .domain([1000, 10000, 100000, 1000000, 10000000, 100000000])\r\n    .range([\"rgb(149,220,244)\", \"rgb(84,203,242)\", \"rgb(0,172,227)\", \"rgb(0,142,188)\", \"rgb(0,112,146)\", \"rgb(0,80,107)\"]);\r\n\r\n  const paises = iso => {\r\n    for (var i = 0; i < countries.length; i++) {\r\n\r\n      if (countries[i].countryInfo.iso2 == iso) {\r\n\r\n        return numeral(countries[i].cases).format(\"0,0\");\r\n      }\r\n    }\r\n    return \"Sin datos\";\r\n  }\r\n\r\n  const color = iso => {\r\n    console.log(\"iso_A2\" + iso);\r\n    for (var i = 0; i < countries.length; i++) {\r\n      if (countries[i].countryInfo.iso2 == iso) {\r\n        console.log(\"iso_A2: \" + iso + \", \" + countries[i].countryInfo.iso2);\r\n        console.log(countries[i].cases)\r\n        return countries[i].cases;\r\n      }\r\n    }\r\n  }\r\n\r\n  const routeChange=(text)=> {\r\n     history.push(`/country/${text}`);\r\n     console.log(text)\r\n  }\r\n/*\r\n  const handleClick = (text) => {\r\n    let path = ``;\r\n    let history = useHistory();\r\n    history.push(path);\r\n  \r\n  }\r\n   \r\n    console.log(\"NAME: \" + text)\r\n    localStorage.setItem(\"NAME\", text)\r\n    // route to new page by changing window.location\r\n    window.open('/country', \"_self\") //to open new page */\r\n  return (\r\n\r\n    <ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }}>\r\n      {countries.length > 0 && (\r\n        <Geographies geography={geoUrl}>\r\n          {({ geographies }) =>\r\n            geographies.map((geo) => {\r\n              const d = color(geo.properties.ISO_A2)\r\n              return (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill={d ? colorScale(d) : \"rgb(122, 122, 122)\"}\r\n                  onMouseEnter={() => {\r\n                    const { NAME, ISO_A2 } = geo.properties;\r\n                    setTooltipContent(`${NAME} — Contagios: ${paises(ISO_A2)}`);\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTooltipContent(\"\");\r\n                  }}\r\n                  style={{\r\n                    hover: {\r\n                      fill: \"#1fb299\",\r\n                      outline: \"none\"\r\n                    },\r\n                    pressed: {\r\n                      fill: \"#bcf5ec\",\r\n                      outline: \"none\"\r\n                    }\r\n                  }}\r\n                  onClick={() => {\r\n                    const { NAME } = geo.properties;\r\n                    routeChange(NAME)\r\n                  }}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </Geographies>\r\n      )}\r\n\r\n    </ComposableMap>\r\n\r\n  );\r\n}\r\nexport default memo(WorldMap);\r\n","import React, { memo, useEffect, useState } from \"react\";\r\n\r\nconst InfectedDeath = ({ item }) => {\r\n   \r\n    return (\r\n        <>\r\n                <div className=\"col-xl-2 data\">\r\n                    <div className=\"card\" id={item.id}>\r\n                        <div className=\"card-body\">\r\n                            <h2 className=\"card-title\">{item.label}</h2>\r\n                            <h4 className=\"card-text\">{item.cant}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default InfectedDeath;","import React from \"react\";\r\n\r\n/*https://disease.sh/v3/covid-19/countries?sort=cases*/\r\n\r\nconst Listas = ({ item, tipo }) => {\r\n    if (tipo == 0) {\r\n        return (\r\n            <tr>\r\n                <td>{item.country}</td>\r\n                <td>{item.cases}</td>\r\n            </tr>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <tr>\r\n                <td>{item.country}</td>\r\n                <td>{item.deaths}</td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Listas;","import React, { useState, useEffect } from \"react\";\r\nimport numeral from 'numeral';\r\nimport { Line } from 'react-chartjs-2';\r\nimport Listas from './Lista';\r\n\r\n\r\n\r\nconst Chart = ({ item }) => {\r\n  const [CasesHistorico, setCasesHistorico] = useState({});\r\n  const [DeathHistorico, setDeathHistorico] = useState({});\r\n\r\n  const options1 = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n      mode: \"index\",\r\n      intersect: false,\r\n      callbacks: {\r\n        label: function (tooltipItem, data) {\r\n          return numeral(tooltipItem.value).format(\"+0,0\");\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          type: \"time\",\r\n          time: {\r\n            format: \"MM/DD/YY\",\r\n            tooltipFormat: \"ll\",\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n          ticks: {\r\n            // Include a dollar sign in the ticks\r\n            callback: function (value, index, values) {\r\n              return numeral(value).format(\"0 a\");\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  const options2 = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n      },\r\n    },\r\n    maintainAspectRatio: true,\r\n    tooltips: {\r\n      mode: \"index\",\r\n      intersect: false,\r\n      callbacks: {\r\n        label: function (tooltipItem, DeathHistorico) {\r\n          return numeral(tooltipItem.value).format(\"+0,0\");\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          type: \"time\",\r\n          time: {\r\n            format: \"MM/DD/YY\",\r\n            tooltipFormat: \"ll\",\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n          ticks: {\r\n            // Include a dollar sign in the ticks\r\n            callback: function (value, index, values) {\r\n              return numeral(value).format(\"0.0a\");\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  \r\n  const buildChartData = (data, cases) => {\r\n    const chartData = [];\r\n    let lastDataPoint;\r\n    for (let date in data.cases) {\r\n      if (lastDataPoint) {\r\n        let newDataPoint = {\r\n          x: date,\r\n          y: data[cases][date] - lastDataPoint\r\n        }\r\n        chartData.push(newDataPoint);\r\n      }\r\n      lastDataPoint = data[cases][date];\r\n    }\r\n    return chartData;\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          console.log(data);\r\n          const caseData = buildChartData(data, 'cases');\r\n          setCasesHistorico(caseData);\r\n          const deathData = buildChartData(data, 'deaths');\r\n          setDeathHistorico(deathData);\r\n        });\r\n    }\r\n    fetchData();\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div>\r\n      <ul className=\"nav nav-tabs nav-justified barrita\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" data-toggle=\"tab\" href=\"#cases\">Casos</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" data-toggle=\"tab\" href=\"#death\">Muertes</a>\r\n        </li>\r\n      </ul>\r\n\r\n      <div className=\"tab-content\">\r\n        <div id=\"cases\" className=\"container tab-pane active\"><br></br>\r\n        <div className=\"\">\r\n          <h3 className=\"ChartTitle\">Casos</h3>\r\n          <div >\r\n            {CasesHistorico?.length > 0 && (\r\n              <Line \r\n              \r\n                data={{\r\n                  datasets: [\r\n                    {\r\n                      backgroundColor: \"rgb(153, 204, 255,1)\",\r\n                      borderColor: \"rgb(0, 153, 255,1)\",\r\n                      data: CasesHistorico,\r\n                    },\r\n                  ],\r\n                }}\r\n                options={options1}\r\n              />\r\n            )}\r\n          </div>\r\n          </div>\r\n          <div>\r\n            <div className=\"lista\">\r\n              <h5 className=\"titulo\">Total de casos por país:</h5>\r\n              <div className=\"container-fluid divC\">\r\n                <table className=\"table table-hover table-borderless table-responsive\">\r\n                  <tbody>\r\n                    {\r\n                      item.map(item => (\r\n                        <Listas key={item.countryInfo.iso3} item={item} tipo ='0'/>\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div id=\"death\" className=\"container tab-pane fade\"><br></br>\r\n        <div className=\"\">\r\n        <h3 className=\"ChartTitle\">Muertes</h3>\r\n          <div >\r\n            {DeathHistorico?.length > 0 && (\r\n              <Line\r\n                data={{\r\n                  datasets: [\r\n                    {\r\n                      backgroundColor: \"#ffcccc\",\r\n                      borderColor: \"#ff4d4d\",\r\n                      data: DeathHistorico,\r\n                    },\r\n                  ],\r\n                }}\r\n                options={options2}\r\n              />\r\n            )}\r\n          </div> \r\n          </div>\r\n          <div>         \r\n            <div className=\"lista\">\r\n              <h5 className=\"titulo\">Total de muertes por pais</h5>\r\n              <div className=\"container-fluid divM\">\r\n                <table className=\"table table-hover table-borderless table-responsive\">\r\n                  <tbody>\r\n                    {\r\n                      item.map(item => (\r\n                        <Listas key={item.countryInfo.iso3} item={item} tipo ='1' />\r\n                      ))\r\n                    }\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;","import React, { memo, useEffect, useState } from \"react\";\r\nimport WorldMap from './Pag1/WorldMap';\r\nimport InfectedDeath from './Pag1/InfectedDeath';\r\nimport axios from 'axios';\r\nimport Chart from './Pag1/Chart';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst Pag1 = () => {\r\n    const [content, setContent] = useState(\"\");\r\n    const [items, setItems] = useState([]);\r\n    const [left, setLeft] = useState([]);\r\n  \r\n    useEffect(() => {\r\n      const fetchItems = async () => {\r\n        const result = await axios(\r\n          \"https://disease.sh/v3/covid-19/all\"\r\n        );\r\n        const izq =[ \r\n          {id: 'A', label: \"Casos: \", cant: result.data.cases},\r\n          {id: 'B', label: \"Activos\", cant: result.data.active},\r\n          {id: 'C', label: \"Muertes: \", cant: result.data.deaths},\r\n          {id: 'D', label: \"Criticos\", cant: result.data.critical},\r\n          {id: 'E', label: \"Recuperados: \", cant: result.data.recovered}\r\n        ];\r\n        setLeft(izq);\r\n        console.log(izq);\r\n      }\r\n      fetchItems();\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      const fetchItems = async () => {\r\n        const result = await axios(\r\n          \"https://disease.sh/v3/covid-19/countries?sort=cases\"\r\n        );\r\n        console.log(result.data);\r\n        setItems(result.data);\r\n  \r\n      }\r\n      fetchItems();\r\n    }, []);\r\n  \r\n    return (\r\n        <div className=\"container-fluid mt-4\">\r\n            <div className=\"row\">\r\n                <div className=\"col-xl-2 data\">\r\n                    <h1 className=\"tituloWW\">WorldWide: </h1>\r\n                </div>\r\n                \r\n                {\r\n                    left.map(left => (\r\n                        <InfectedDeath key={left.id} item={left} />\r\n                    ))\r\n                }\r\n    \r\n            </div>\r\n\r\n            <div className=\"row \">\r\n                <div className=\"col-sm-8\">\r\n                    <WorldMap setTooltipContent={setContent} countries={items} />\r\n                    <ReactTooltip>{content}</ReactTooltip>\r\n                </div>\r\n                <div className=\"col-sm-4\" >\r\n\r\n                    <div className=\"chart\">\r\n                        <Chart item={items}/>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pag1;","import React from 'react';\r\nimport NavBar from './NavBar';\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <div>\r\n            <NavBar />\r\n            {props.children}\r\n        </div>);\r\n\r\n}\r\n\r\nexport default Layout;","import React, { useState, useEffect } from 'react';\nimport NavBar from './componentes/NavBar.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './App.css';\nimport Pag1 from './componentes/PagWorld';\nimport Pag2 from './componentes/PagCountry';\nimport Layout from './componentes/Layout';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\n\nfunction App() {\n \n \n /* <Pag2 />  */\n\n  return (\n    <BrowserRouter basename= {process.env.PUBLIC_URL}>\n    <Layout>\n      <Switch>\n        <Route exact path=\"/world\" component={Pag1} />\n        <Route exact path=\"/\" component={Pag1} />\n        <Route exact path=\"/country/:datos\" component={Pag2} />\n      </Switch>\n    </Layout>\n    </BrowserRouter>    \n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}